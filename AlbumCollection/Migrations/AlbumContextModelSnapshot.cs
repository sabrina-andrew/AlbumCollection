// <auto-generated />
using AlbumCollection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlbumCollection.Migrations
{
    [DbContext(typeof(AlbumContext))]
    partial class AlbumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlbumCollection.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist");

                    b.Property<int>("ReleaseYear");

                    b.Property<string>("Title");

                    b.HasKey("AlbumId");

                    b.ToTable("Albums");

                    b.HasData(
                        new { AlbumId = 1, Artist = "Carl Franklin", ReleaseYear = 2015, Title = "Music to Code By" },
                        new { AlbumId = 2, Artist = "Tycho", ReleaseYear = 2016, Title = "Epoch" },
                        new { AlbumId = 3, Artist = "Megadeth", ReleaseYear = 1994, Title = "Youthanasia" }
                    );
                });

            modelBuilder.Entity("AlbumCollection.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId");

                    b.Property<string>("SongName");

                    b.HasKey("SongId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new { SongId = 1, AlbumId = 1, SongName = "Blue" },
                        new { SongId = 2, AlbumId = 1, SongName = "Red" },
                        new { SongId = 3, AlbumId = 1, SongName = "Orange" },
                        new { SongId = 4, AlbumId = 2, SongName = "From Home" },
                        new { SongId = 5, AlbumId = 2, SongName = "Sunrise Projector" },
                        new { SongId = 6, AlbumId = 3, SongName = "Reckoning Day" },
                        new { SongId = 7, AlbumId = 3, SongName = "Train of Consequences" },
                        new { SongId = 8, AlbumId = 3, SongName = "Addicted To Chaos" },
                        new { SongId = 9, AlbumId = 3, SongName = "A Tout le Monde" }
                    );
                });

            modelBuilder.Entity("AlbumCollection.Models.Song", b =>
                {
                    b.HasOne("AlbumCollection.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
